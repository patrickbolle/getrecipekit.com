*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

/*
! tailwindcss v3.4.17 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  letter-spacing: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
input:where([type='button']),
input:where([type='reset']),
input:where([type='submit']) {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden]:where(:not([hidden="until-found"])) {
  display: none;
}

.twcss-container {
  width: 100%;
}

@media (min-width: 320px) {
  .twcss-container {
    max-width: 320px;
  }
}

@media (min-width: 750px) {
  .twcss-container {
    max-width: 750px;
  }
}

@media (min-width: 990px) {
  .twcss-container {
    max-width: 990px;
  }
}

@media (min-width: 1440px) {
  .twcss-container {
    max-width: 1440px;
  }
}

@media (min-width: 1920px) {
  .twcss-container {
    max-width: 1920px;
  }
}

.twcss-prose {
  color: var(--tw-prose-body);
  max-width: 65ch;
}

.twcss-prose :where(p):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}

.twcss-prose :where([class~="lead"]):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  color: var(--tw-prose-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}

.twcss-prose :where(a):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  color: var(--tw-prose-links);
  text-decoration: underline;
  font-weight: 500;
}

.twcss-prose :where(strong):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  color: var(--tw-prose-bold);
  font-weight: 600;
}

.twcss-prose :where(a strong):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  color: inherit;
}

.twcss-prose :where(blockquote strong):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  color: inherit;
}

.twcss-prose :where(thead th strong):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  color: inherit;
}

.twcss-prose :where(ol):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  list-style-type: decimal;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-inline-start: 1.625em;
}

.twcss-prose :where(ol[type="A"]):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  list-style-type: upper-alpha;
}

.twcss-prose :where(ol[type="a"]):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  list-style-type: lower-alpha;
}

.twcss-prose :where(ol[type="A" s]):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  list-style-type: upper-alpha;
}

.twcss-prose :where(ol[type="a" s]):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  list-style-type: lower-alpha;
}

.twcss-prose :where(ol[type="I"]):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  list-style-type: upper-roman;
}

.twcss-prose :where(ol[type="i"]):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  list-style-type: lower-roman;
}

.twcss-prose :where(ol[type="I" s]):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  list-style-type: upper-roman;
}

.twcss-prose :where(ol[type="i" s]):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  list-style-type: lower-roman;
}

.twcss-prose :where(ol[type="1"]):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  list-style-type: decimal;
}

.twcss-prose :where(ul):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  list-style-type: disc;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-inline-start: 1.625em;
}

.twcss-prose :where(ol > li):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *))::marker {
  font-weight: 400;
  color: var(--tw-prose-counters);
}

.twcss-prose :where(ul > li):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *))::marker {
  color: var(--tw-prose-bullets);
}

.twcss-prose :where(dt):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.25em;
}

.twcss-prose :where(hr):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  border-color: var(--tw-prose-hr);
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
}

.twcss-prose :where(blockquote):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  font-weight: 500;
  font-style: italic;
  color: var(--tw-prose-quotes);
  border-inline-start-width: 0.25rem;
  border-inline-start-color: var(--tw-prose-quote-borders);
  quotes: "\201C""\201D""\2018""\2019";
  margin-top: 1.6em;
  margin-bottom: 1.6em;
  padding-inline-start: 1em;
}

.twcss-prose :where(blockquote p:first-of-type):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *))::before {
  content: open-quote;
}

.twcss-prose :where(blockquote p:last-of-type):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *))::after {
  content: close-quote;
}

.twcss-prose :where(h1):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 800;
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
}

.twcss-prose :where(h1 strong):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  font-weight: 900;
  color: inherit;
}

.twcss-prose :where(h2):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 700;
  font-size: 1.5em;
  margin-top: 2em;
  margin-bottom: 1em;
  line-height: 1.3333333;
}

.twcss-prose :where(h2 strong):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  font-weight: 800;
  color: inherit;
}

.twcss-prose :where(h3):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  font-size: 1.25em;
  margin-top: 1.6em;
  margin-bottom: 0.6em;
  line-height: 1.6;
}

.twcss-prose :where(h3 strong):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}

.twcss-prose :where(h4):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
}

.twcss-prose :where(h4 strong):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}

.twcss-prose :where(img):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.twcss-prose :where(picture):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  display: block;
  margin-top: 2em;
  margin-bottom: 2em;
}

.twcss-prose :where(video):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.twcss-prose :where(kbd):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  font-weight: 500;
  font-family: inherit;
  color: var(--tw-prose-kbd);
  box-shadow: 0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%), 0 3px 0 rgb(var(--tw-prose-kbd-shadows) / 10%);
  font-size: 0.875em;
  border-radius: 0.3125rem;
  padding-top: 0.1875em;
  padding-inline-end: 0.375em;
  padding-bottom: 0.1875em;
  padding-inline-start: 0.375em;
}

.twcss-prose :where(code):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  color: var(--tw-prose-code);
  font-weight: 600;
  font-size: 0.875em;
}

.twcss-prose :where(code):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *))::before {
  content: "`";
}

.twcss-prose :where(code):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *))::after {
  content: "`";
}

.twcss-prose :where(a code):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  color: inherit;
}

.twcss-prose :where(h1 code):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  color: inherit;
}

.twcss-prose :where(h2 code):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  color: inherit;
  font-size: 0.875em;
}

.twcss-prose :where(h3 code):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  color: inherit;
  font-size: 0.9em;
}

.twcss-prose :where(h4 code):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  color: inherit;
}

.twcss-prose :where(blockquote code):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  color: inherit;
}

.twcss-prose :where(thead th code):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  color: inherit;
}

.twcss-prose :where(pre):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  color: var(--tw-prose-pre-code);
  background-color: var(--tw-prose-pre-bg);
  overflow-x: auto;
  font-weight: 400;
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
  border-radius: 0.375rem;
  padding-top: 0.8571429em;
  padding-inline-end: 1.1428571em;
  padding-bottom: 0.8571429em;
  padding-inline-start: 1.1428571em;
}

.twcss-prose :where(pre code):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}

.twcss-prose :where(pre code):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *))::before {
  content: none;
}

.twcss-prose :where(pre code):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *))::after {
  content: none;
}

.twcss-prose :where(table):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  width: 100%;
  table-layout: auto;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
}

.twcss-prose :where(thead):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-th-borders);
}

.twcss-prose :where(thead th):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  vertical-align: bottom;
  padding-inline-end: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-inline-start: 0.5714286em;
}

.twcss-prose :where(tbody tr):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-td-borders);
}

.twcss-prose :where(tbody tr:last-child):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  border-bottom-width: 0;
}

.twcss-prose :where(tbody td):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  vertical-align: baseline;
}

.twcss-prose :where(tfoot):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  border-top-width: 1px;
  border-top-color: var(--tw-prose-th-borders);
}

.twcss-prose :where(tfoot td):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  vertical-align: top;
}

.twcss-prose :where(th, td):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  text-align: start;
}

.twcss-prose :where(figure > *):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.twcss-prose :where(figcaption):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  color: var(--tw-prose-captions);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}

.twcss-prose {
  --tw-prose-body: #374151;
  --tw-prose-headings: #111827;
  --tw-prose-lead: #4b5563;
  --tw-prose-links: #111827;
  --tw-prose-bold: #111827;
  --tw-prose-counters: #6b7280;
  --tw-prose-bullets: #d1d5db;
  --tw-prose-hr: #e5e7eb;
  --tw-prose-quotes: #111827;
  --tw-prose-quote-borders: #e5e7eb;
  --tw-prose-captions: #6b7280;
  --tw-prose-kbd: #111827;
  --tw-prose-kbd-shadows: 17 24 39;
  --tw-prose-code: #111827;
  --tw-prose-pre-code: #e5e7eb;
  --tw-prose-pre-bg: #1f2937;
  --tw-prose-th-borders: #d1d5db;
  --tw-prose-td-borders: #e5e7eb;
  --tw-prose-invert-body: #d1d5db;
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: #9ca3af;
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: #9ca3af;
  --tw-prose-invert-bullets: #4b5563;
  --tw-prose-invert-hr: #374151;
  --tw-prose-invert-quotes: #f3f4f6;
  --tw-prose-invert-quote-borders: #374151;
  --tw-prose-invert-captions: #9ca3af;
  --tw-prose-invert-kbd: #fff;
  --tw-prose-invert-kbd-shadows: 255 255 255;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: #d1d5db;
  --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
  --tw-prose-invert-th-borders: #4b5563;
  --tw-prose-invert-td-borders: #374151;
  font-size: 1rem;
  line-height: 1.75;
}

.twcss-prose :where(picture > img):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.twcss-prose :where(li):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}

.twcss-prose :where(ol > li):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  padding-inline-start: 0.375em;
}

.twcss-prose :where(ul > li):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  padding-inline-start: 0.375em;
}

.twcss-prose :where(.twcss-prose > ul > li p):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.twcss-prose :where(.twcss-prose > ul > li > p:first-child):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  margin-top: 1.25em;
}

.twcss-prose :where(.twcss-prose > ul > li > p:last-child):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  margin-bottom: 1.25em;
}

.twcss-prose :where(.twcss-prose > ol > li > p:first-child):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  margin-top: 1.25em;
}

.twcss-prose :where(.twcss-prose > ol > li > p:last-child):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  margin-bottom: 1.25em;
}

.twcss-prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.twcss-prose :where(dl):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}

.twcss-prose :where(dd):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  margin-top: 0.5em;
  padding-inline-start: 1.625em;
}

.twcss-prose :where(hr + *):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  margin-top: 0;
}

.twcss-prose :where(h2 + *):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  margin-top: 0;
}

.twcss-prose :where(h3 + *):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  margin-top: 0;
}

.twcss-prose :where(h4 + *):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  margin-top: 0;
}

.twcss-prose :where(thead th:first-child):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  padding-inline-start: 0;
}

.twcss-prose :where(thead th:last-child):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  padding-inline-end: 0;
}

.twcss-prose :where(tbody td, tfoot td):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  padding-top: 0.5714286em;
  padding-inline-end: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-inline-start: 0.5714286em;
}

.twcss-prose :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  padding-inline-start: 0;
}

.twcss-prose :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  padding-inline-end: 0;
}

.twcss-prose :where(figure):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.twcss-prose :where(.twcss-prose > :first-child):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  margin-top: 0;
}

.twcss-prose :where(.twcss-prose > :last-child):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  margin-bottom: 0;
}

.twcss-prose-2xl {
  font-size: 1.5rem;
  line-height: 1.6666667;
}

.twcss-prose-2xl :where(p):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  margin-top: 1.3333333em;
  margin-bottom: 1.3333333em;
}

.twcss-prose-2xl :where([class~="lead"]):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  font-size: 1.25em;
  line-height: 1.4666667;
  margin-top: 1.0666667em;
  margin-bottom: 1.0666667em;
}

.twcss-prose-2xl :where(blockquote):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  margin-top: 1.7777778em;
  margin-bottom: 1.7777778em;
  padding-inline-start: 1.1111111em;
}

.twcss-prose-2xl :where(h1):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  font-size: 2.6666667em;
  margin-top: 0;
  margin-bottom: 0.875em;
  line-height: 1;
}

.twcss-prose-2xl :where(h2):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  font-size: 2em;
  margin-top: 1.5em;
  margin-bottom: 0.8333333em;
  line-height: 1.0833333;
}

.twcss-prose-2xl :where(h3):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  font-size: 1.5em;
  margin-top: 1.5555556em;
  margin-bottom: 0.6666667em;
  line-height: 1.2222222;
}

.twcss-prose-2xl :where(h4):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  margin-top: 1.6666667em;
  margin-bottom: 0.6666667em;
  line-height: 1.5;
}

.twcss-prose-2xl :where(img):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.twcss-prose-2xl :where(picture):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.twcss-prose-2xl :where(picture > img):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.twcss-prose-2xl :where(video):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.twcss-prose-2xl :where(kbd):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  font-size: 0.8333333em;
  border-radius: 0.375rem;
  padding-top: 0.25em;
  padding-inline-end: 0.3333333em;
  padding-bottom: 0.25em;
  padding-inline-start: 0.3333333em;
}

.twcss-prose-2xl :where(code):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  font-size: 0.8333333em;
}

.twcss-prose-2xl :where(h2 code):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  font-size: 0.875em;
}

.twcss-prose-2xl :where(h3 code):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  font-size: 0.8888889em;
}

.twcss-prose-2xl :where(pre):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  font-size: 0.8333333em;
  line-height: 1.8;
  margin-top: 2em;
  margin-bottom: 2em;
  border-radius: 0.5rem;
  padding-top: 1.2em;
  padding-inline-end: 1.6em;
  padding-bottom: 1.2em;
  padding-inline-start: 1.6em;
}

.twcss-prose-2xl :where(ol):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  margin-top: 1.3333333em;
  margin-bottom: 1.3333333em;
  padding-inline-start: 1.5833333em;
}

.twcss-prose-2xl :where(ul):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  margin-top: 1.3333333em;
  margin-bottom: 1.3333333em;
  padding-inline-start: 1.5833333em;
}

.twcss-prose-2xl :where(li):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}

.twcss-prose-2xl :where(ol > li):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  padding-inline-start: 0.4166667em;
}

.twcss-prose-2xl :where(ul > li):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  padding-inline-start: 0.4166667em;
}

.twcss-prose-2xl :where(.twcss-prose-2xl > ul > li p):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  margin-top: 0.8333333em;
  margin-bottom: 0.8333333em;
}

.twcss-prose-2xl :where(.twcss-prose-2xl > ul > li > p:first-child):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  margin-top: 1.3333333em;
}

.twcss-prose-2xl :where(.twcss-prose-2xl > ul > li > p:last-child):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  margin-bottom: 1.3333333em;
}

.twcss-prose-2xl :where(.twcss-prose-2xl > ol > li > p:first-child):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  margin-top: 1.3333333em;
}

.twcss-prose-2xl :where(.twcss-prose-2xl > ol > li > p:last-child):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  margin-bottom: 1.3333333em;
}

.twcss-prose-2xl :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  margin-top: 0.6666667em;
  margin-bottom: 0.6666667em;
}

.twcss-prose-2xl :where(dl):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  margin-top: 1.3333333em;
  margin-bottom: 1.3333333em;
}

.twcss-prose-2xl :where(dt):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  margin-top: 1.3333333em;
}

.twcss-prose-2xl :where(dd):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  margin-top: 0.5em;
  padding-inline-start: 1.5833333em;
}

.twcss-prose-2xl :where(hr):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  margin-top: 3em;
  margin-bottom: 3em;
}

.twcss-prose-2xl :where(hr + *):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  margin-top: 0;
}

.twcss-prose-2xl :where(h2 + *):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  margin-top: 0;
}

.twcss-prose-2xl :where(h3 + *):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  margin-top: 0;
}

.twcss-prose-2xl :where(h4 + *):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  margin-top: 0;
}

.twcss-prose-2xl :where(table):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  font-size: 0.8333333em;
  line-height: 1.4;
}

.twcss-prose-2xl :where(thead th):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  padding-inline-end: 0.6em;
  padding-bottom: 0.8em;
  padding-inline-start: 0.6em;
}

.twcss-prose-2xl :where(thead th:first-child):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  padding-inline-start: 0;
}

.twcss-prose-2xl :where(thead th:last-child):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  padding-inline-end: 0;
}

.twcss-prose-2xl :where(tbody td, tfoot td):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  padding-top: 0.8em;
  padding-inline-end: 0.6em;
  padding-bottom: 0.8em;
  padding-inline-start: 0.6em;
}

.twcss-prose-2xl :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  padding-inline-start: 0;
}

.twcss-prose-2xl :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  padding-inline-end: 0;
}

.twcss-prose-2xl :where(figure):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.twcss-prose-2xl :where(figure > *):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.twcss-prose-2xl :where(figcaption):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  font-size: 0.8333333em;
  line-height: 1.6;
  margin-top: 1em;
}

.twcss-prose-2xl :where(.twcss-prose-2xl > :first-child):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  margin-top: 0;
}

.twcss-prose-2xl :where(.twcss-prose-2xl > :last-child):not(:where([class~="twcss-not-prose"],[class~="twcss-not-prose"] *)) {
  margin-bottom: 0;
}

.twcss-sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.twcss-isolate {
  isolation: isolate;
}

.twcss-order-last {
  order: 9999;
}

.twcss-mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.twcss-mb-8 {
  margin-bottom: 2rem;
}

.twcss-mt-0\.5 {
  margin-top: 0.125rem;
}

.twcss-mt-10 {
  margin-top: 2.5rem;
}

.twcss-mt-2 {
  margin-top: 0.5rem;
}

.twcss-mt-4 {
  margin-top: 1rem;
}

.twcss-mt-6 {
  margin-top: 1.5rem;
}

.twcss-mt-8 {
  margin-top: 2rem;
}

.twcss-block {
  display: block;
}

.twcss-flex {
  display: flex;
}

.twcss-grid {
  display: grid;
}

.twcss-size-10 {
  width: 2.5rem;
  height: 2.5rem;
}

.twcss-size-5 {
  width: 1.25rem;
  height: 1.25rem;
}

.twcss-max-h-12 {
  max-height: 3rem;
}

.twcss-w-auto {
  width: auto;
}

.twcss-w-full {
  width: 100%;
}

.twcss-max-w-2xl {
  max-width: 42rem;
}

.twcss-max-w-3xl {
  max-width: 48rem;
}

.twcss-max-w-7xl {
  max-width: 80rem;
}

.twcss-shrink-0 {
  flex-shrink: 0;
}

.twcss-cursor-pointer {
  cursor: pointer;
}

.twcss-grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}

.twcss-flex-col {
  flex-direction: column;
}

.twcss-flex-wrap {
  flex-wrap: wrap;
}

.twcss-items-center {
  align-items: center;
}

.twcss-justify-center {
  justify-content: center;
}

.twcss-justify-between {
  justify-content: space-between;
}

.twcss-gap-0\.5 {
  gap: 0.125rem;
}

.twcss-gap-1 {
  gap: 0.25rem;
}

.twcss-gap-1\.5 {
  gap: 0.375rem;
}

.twcss-gap-4 {
  gap: 1rem;
}

.twcss-gap-5 {
  gap: 1.25rem;
}

.twcss-space-y-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.5rem * var(--tw-space-y-reverse));
}

.twcss-space-y-4 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1rem * var(--tw-space-y-reverse));
}

.twcss-divide-y > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-y-reverse: 0;
  border-top-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
  border-bottom-width: calc(1px * var(--tw-divide-y-reverse));
}

.twcss-divide-gray-200 > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-opacity: 1;
  border-color: rgb(229 231 235 / var(--tw-divide-opacity, 1));
}

.twcss-rounded {
  border-radius: 0.25rem;
}

.twcss-rounded-2xl {
  border-radius: 1rem;
}

.twcss-rounded-full {
  border-radius: 9999px;
}

.twcss-rounded-lg {
  border-radius: 0.5rem;
}

.twcss-border {
  border-width: 1px;
}

.twcss-border-s-4 {
  border-inline-start-width: 4px;
}

.twcss-border-gray-200 {
  --tw-border-opacity: 1;
  border-color: rgb(229 231 235 / var(--tw-border-opacity, 1));
}

.twcss-border-green-500 {
  --tw-border-opacity: 1;
  border-color: rgb(34 197 94 / var(--tw-border-opacity, 1));
}

.twcss-border-indigo-600 {
  --tw-border-opacity: 1;
  border-color: rgb(79 70 229 / var(--tw-border-opacity, 1));
}

.twcss-bg-blue-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(239 246 255 / var(--tw-bg-opacity, 1));
}

.twcss-bg-gray-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(249 250 251 / var(--tw-bg-opacity, 1));
}

.twcss-bg-indigo-600 {
  --tw-bg-opacity: 1;
  background-color: rgb(79 70 229 / var(--tw-bg-opacity, 1));
}

.twcss-bg-red-600 {
  --tw-bg-opacity: 1;
  background-color: rgb(220 38 38 / var(--tw-bg-opacity, 1));
}

.twcss-bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity, 1));
}

.twcss-p-1\.5 {
  padding: 0.375rem;
}

.twcss-p-6 {
  padding: 1.5rem;
}

.twcss-p-8 {
  padding: 2rem;
}

.twcss-px-12 {
  padding-left: 3rem;
  padding-right: 3rem;
}

.twcss-px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}

.twcss-py-12 {
  padding-top: 3rem;
  padding-bottom: 3rem;
}

.twcss-py-3 {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}

.twcss-py-32 {
  padding-top: 8rem;
  padding-bottom: 8rem;
}

.twcss-py-8 {
  padding-top: 2rem;
  padding-bottom: 2rem;
}

.twcss-pt-2 {
  padding-top: 0.5rem;
}

.twcss-text-center {
  text-align: center;
}

.twcss-text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}

.twcss-text-3xl {
  font-size: 1.875rem;
  line-height: 2.25rem;
}

.twcss-text-4xl {
  font-size: 2.25rem;
  line-height: 2.5rem;
}

.twcss-text-lg {
  font-size: 1.125rem;
  line-height: 1.75rem;
}

.twcss-text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.twcss-text-xl {
  font-size: 1.25rem;
  line-height: 1.75rem;
}

.twcss-font-bold {
  font-weight: 700;
}

.twcss-font-extrabold {
  font-weight: 800;
}

.twcss-font-medium {
  font-weight: 500;
}

.twcss-leading-relaxed {
  line-height: 1.625;
}

.twcss-tracking-tight {
  letter-spacing: -0.025em;
}

.twcss-text-blue-600 {
  --tw-text-opacity: 1;
  color: rgb(37 99 235 / var(--tw-text-opacity, 1));
}

.twcss-text-gray-400 {
  --tw-text-opacity: 1;
  color: rgb(156 163 175 / var(--tw-text-opacity, 1));
}

.twcss-text-gray-500 {
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity, 1));
}

.twcss-text-gray-700 {
  --tw-text-opacity: 1;
  color: rgb(55 65 81 / var(--tw-text-opacity, 1));
}

.twcss-text-gray-900 {
  --tw-text-opacity: 1;
  color: rgb(17 24 39 / var(--tw-text-opacity, 1));
}

.twcss-text-indigo-600 {
  --tw-text-opacity: 1;
  color: rgb(79 70 229 / var(--tw-text-opacity, 1));
}

.twcss-text-indigo-700 {
  --tw-text-opacity: 1;
  color: rgb(67 56 202 / var(--tw-text-opacity, 1));
}

.twcss-text-red-500 {
  --tw-text-opacity: 1;
  color: rgb(239 68 68 / var(--tw-text-opacity, 1));
}

.twcss-text-red-600 {
  --tw-text-opacity: 1;
  color: rgb(220 38 38 / var(--tw-text-opacity, 1));
}

.twcss-text-red-700 {
  --tw-text-opacity: 1;
  color: rgb(185 28 28 / var(--tw-text-opacity, 1));
}

.twcss-text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity, 1));
}

.twcss-shadow {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.twcss-shadow-sm {
  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.twcss-transition {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.twcss-duration-300 {
  transition-duration: 300ms;
}

.hover\:twcss-bg-red-700:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(185 28 28 / var(--tw-bg-opacity, 1));
}

.hover\:twcss-bg-transparent:hover {
  background-color: transparent;
}

.hover\:twcss-text-indigo-600:hover {
  --tw-text-opacity: 1;
  color: rgb(79 70 229 / var(--tw-text-opacity, 1));
}

.hover\:twcss-text-red-700:hover {
  --tw-text-opacity: 1;
  color: rgb(185 28 28 / var(--tw-text-opacity, 1));
}

.focus\:twcss-outline-none:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.focus\:twcss-ring:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.active\:twcss-bg-red-500:active {
  --tw-bg-opacity: 1;
  background-color: rgb(239 68 68 / var(--tw-bg-opacity, 1));
}

.active\:twcss-text-indigo-500:active {
  --tw-text-opacity: 1;
  color: rgb(99 102 241 / var(--tw-text-opacity, 1));
}

.active\:twcss-text-red-500:active {
  --tw-text-opacity: 1;
  color: rgb(239 68 68 / var(--tw-text-opacity, 1));
}

.twcss-group[open] .group-open\:-twcss-rotate-45 {
  --tw-rotate: -45deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

@media (min-width: 320px) {
  .sm\:twcss-mt-4 {
    margin-top: 1rem;
  }

  .sm\:twcss-mt-6 {
    margin-top: 1.5rem;
  }

  .sm\:twcss-mt-8 {
    margin-top: 2rem;
  }

  .sm\:twcss-block {
    display: block;
  }

  .sm\:twcss-w-auto {
    width: auto;
  }

  .sm\:twcss-columns-2 {
    -moz-columns: 2;
         columns: 2;
  }

  .sm\:twcss-break-inside-avoid {
    -moz-column-break-inside: avoid;
         break-inside: avoid;
  }

  .sm\:twcss-grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .sm\:twcss-items-stretch {
    align-items: stretch;
  }

  .sm\:twcss-gap-6 {
    gap: 1.5rem;
  }

  .sm\:twcss-p-3 {
    padding: 0.75rem;
  }

  .sm\:twcss-p-8 {
    padding: 2rem;
  }

  .sm\:twcss-px-6 {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }

  .sm\:twcss-px-8 {
    padding-left: 2rem;
    padding-right: 2rem;
  }

  .sm\:twcss-py-12 {
    padding-top: 3rem;
    padding-bottom: 3rem;
  }

  .sm\:twcss-text-4xl {
    font-size: 2.25rem;
    line-height: 2.5rem;
  }

  .sm\:twcss-text-5xl {
    font-size: 3rem;
    line-height: 1;
  }

  .sm\:twcss-text-xl {
    font-size: 1.25rem;
    line-height: 1.75rem;
  }

  .sm\:twcss-text-xl\/relaxed {
    font-size: 1.25rem;
    line-height: 1.625;
  }
}

@media (min-width: 750px) {
  .md\:twcss-grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }

  .md\:twcss-justify-around {
    justify-content: space-around;
  }

  .md\:twcss-gap-8 {
    gap: 2rem;
  }

  .md\:twcss-text-5xl {
    font-size: 3rem;
    line-height: 1;
  }
}

@media (min-width: 990px) {
  .lg\:twcss-flex {
    display: flex;
  }

  .lg\:twcss-columns-3 {
    -moz-columns: 3;
         columns: 3;
  }

  .lg\:twcss-grid-cols-4 {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }

  .lg\:twcss-items-center {
    align-items: center;
  }

  .lg\:twcss-gap-8 {
    gap: 2rem;
  }

  .lg\:twcss-px-8 {
    padding-left: 2rem;
    padding-right: 2rem;
  }

  .lg\:twcss-py-16 {
    padding-top: 4rem;
    padding-bottom: 4rem;
  }
}

.\[\&_summary\:\:-webkit-details-marker\]\:twcss-hidden summary::-webkit-details-marker {
  display: none;
}
